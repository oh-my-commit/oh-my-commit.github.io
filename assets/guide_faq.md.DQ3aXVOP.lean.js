import{_ as i,c as l,a0 as e,o as m}from"./chunks/framework.P9qPzDnn.js";const y=JSON.parse('{"title":"Oh My Commit 常见问题解答 (FAQ)","description":"","frontmatter":{},"headers":[],"relativePath":"guide/faq.md","filePath":"guide/faq.md"}'),t={name:"guide/faq.md"};function o(r,a,s,d,h,u){return m(),l("div",null,a[0]||(a[0]=[e('<h1 id="oh-my-commit-常见问题解答-faq" tabindex="-1">Oh My Commit 常见问题解答 (FAQ) <a class="header-anchor" href="#oh-my-commit-常见问题解答-faq" aria-label="Permalink to &quot;Oh My Commit 常见问题解答 (FAQ)&quot;">​</a></h1><p><a href="#基础问题">基础问题</a> • <a href="#功能相关">功能相关</a> • <a href="#配置问题">配置问题</a> • <a href="#性能与成本">性能与成本</a> • <a href="#故障排除">故障排除</a> • <a href="#其他问题">其他问题</a></p><h2 id="基础问题" tabindex="-1">基础问题 <a class="header-anchor" href="#基础问题" aria-label="Permalink to &quot;基础问题&quot;">​</a></h2><details><summary>Q: Oh My Commit 是什么？</summary><p>A: Oh My Commit（Yet Another Auto Commit，读作&quot;雅刻&quot;）是一款 VSCode 插件，它能通过 AI 智能分析代码变更，自动生成高质量的 commit message，帮助开发者提升开发效率和代码库的可维护性。</p></details><details><summary>Q: Oh My Commit 支持哪些语言？</summary><p>A: Oh My Commit 支持所有编程语言的代码变更分析，因为它关注的是代码变更的语义而不是特定的编程语言。</p></details><h2 id="功能相关" tabindex="-1">功能相关 <a class="header-anchor" href="#功能相关" aria-label="Permalink to &quot;功能相关&quot;">​</a></h2><details><summary>Q: 如何快速开始使用 Oh My Commit？</summary><p>A:</p><ol><li>在 VSCode 扩展商店安装 Oh My Commit</li><li>配置必要的 API 密钥</li><li>使用快捷键或命令面板中的 <code>Oh My Commit: Quick Commit</code> 命令即可开始使用</li></ol></details><details><summary>Q: 有哪些提交方案可以选择？</summary><p>A: Oh My Commit 提供了多种预设的提交方案：</p><ul><li><code>official_recommend</code>：官方推荐方案，平衡性能与成本</li><li><code>gcop_fast</code>：速度优先方案</li><li><code>premium_quality</code>：质量优先方案 你也可以自定义自己的提交方案。</li></ul></details><details><summary>Q: 如何切换不同的提交方案？</summary><p>A: 你可以通过以下方式切换：</p><ol><li>点击状态栏中的方案名称</li><li>使用命令面板中的 <code>Oh My Commit: Select Model</code> 命令</li><li>在设置界面中进行切换</li></ol></details><h2 id="配置问题" tabindex="-1">配置问题 <a class="header-anchor" href="#配置问题" aria-label="Permalink to &quot;配置问题&quot;">​</a></h2><details><summary>Q: 如何配置 API 密钥？</summary><p>A:</p><ol><li>通过命令面板执行 <code>Oh My Commit: Configure API Keys</code></li><li>在配置界面中填入相应的 API 密钥</li><li>使用测试按钮验证 API 可用性</li></ol></details><details><summary>Q: 如何自定义提交方案？</summary><p>A:</p><ol><li>打开设置界面</li><li>找到提交方案管理部分</li><li>创建新方案或编辑现有方案</li><li>调整参数以满足你的需求</li></ol></details><h2 id="性能与成本" tabindex="-1">性能与成本 <a class="header-anchor" href="#性能与成本" aria-label="Permalink to &quot;性能与成本&quot;">​</a></h2><details><summary>Q: Oh My Commit 的响应速度如何？</summary><p>A: 在快速提交模式下，Oh My Commit 的响应时间通常小于 2 秒。具体速度取决于你选择的提交方案和网络状况。</p></details><details><summary>Q: 如何优化 API 调用成本？</summary><p>A:</p><ol><li>使用 <code>gcop_fast</code> 方案可以降低 API 调用成本</li><li>合理配置提交方案的参数</li><li>使用团队共享配置避免重复调用</li></ol></details><h2 id="故障排除" tabindex="-1">故障排除 <a class="header-anchor" href="#故障排除" aria-label="Permalink to &quot;故障排除&quot;">​</a></h2><details><summary>Q: 提交失败怎么办？</summary><p>A:</p><ol><li>检查 API 密钥是否正确配置</li><li>验证网络连接是否正常</li><li>查看 VSCode 输出面板中的错误日志</li><li>如果问题持续，请提交 Issue 或加入 Discord 社区寻求帮助</li></ol></details><details><summary>Q: 如何报告问题？</summary><p>A: 你可以通过以下方式获取帮助：</p><ol><li>在 GitHub 上提交 <a href="https://github.com/oh-my-commit/oh-my-commit/issues" target="_blank" rel="noreferrer">Issue</a></li><li>TODO: 加入我们的 <a href="https://discord.gg/oh-my-commit" target="_blank" rel="noreferrer">Discord 社区</a></li></ol></details><h2 id="其他问题" tabindex="-1">其他问题 <a class="header-anchor" href="#其他问题" aria-label="Permalink to &quot;其他问题&quot;">​</a></h2><details><summary>Q: Oh My Commit 支持团队协作吗？</summary><p>A: 是的，Oh My Commit 支持：</p><ul><li>团队配置共享</li><li>Git hooks 集成</li><li>统一的提交规范</li><li>团队级别的提交历史分析</li></ul></details><details><summary>Q: 如何参与 Oh My Commit 的开发？</summary><p>A: 我们欢迎社区贡献！请：</p><ol><li>阅读我们的<a href="https://github.com/oh-my-commit/oh-my-commit/blob/main/CONTRIBUTING.md" target="_blank" rel="noreferrer">贡献指南</a></li><li>提交 Pull Request</li></ol></details>',21)]))}const n=i(t,[["render",o]]);export{y as __pageData,n as default};
