import{_ as a,c as o,a0 as t,o as i}from"./chunks/framework.P9qPzDnn.js";const p=JSON.parse('{"title":"命令列表","description":"","frontmatter":{},"headers":[],"relativePath":"development/api/commands.md","filePath":"development/api/commands.md"}'),m={name:"development/api/commands.md"};function c(n,e,s,h,r,l){return i(),o("div",null,e[0]||(e[0]=[t('<h1 id="命令列表" tabindex="-1">命令列表 <a class="header-anchor" href="#命令列表" aria-label="Permalink to &quot;命令列表&quot;">​</a></h1><p>Oh My Commit 提供了一系列 VSCode 命令，你可以通过命令面板（<code>Cmd/Ctrl + Shift + P</code>）调用它们。</p><h2 id="核心命令" tabindex="-1">核心命令 <a class="header-anchor" href="#核心命令" aria-label="Permalink to &quot;核心命令&quot;">​</a></h2><h3 id="oh-my-commit-generatecommitmessage" tabindex="-1"><code>oh-my-commit.generateCommitMessage</code> <a class="header-anchor" href="#oh-my-commit-generatecommitmessage" aria-label="Permalink to &quot;`oh-my-commit.generateCommitMessage`&quot;">​</a></h3><p>生成提交消息。分析当前的代码变更，使用 AI 生成符合规范的提交消息。</p><p><strong>快捷键</strong>：<code>Alt + G</code></p><h3 id="oh-my-commit-commit" tabindex="-1"><code>oh-my-commit.commit</code> <a class="header-anchor" href="#oh-my-commit-commit" aria-label="Permalink to &quot;`oh-my-commit.commit`&quot;">​</a></h3><p>执行 Git 提交。使用生成的提交消息或自定义消息进行提交。</p><p><strong>快捷键</strong>：<code>Alt + C</code></p><h3 id="oh-my-commit-regenerate" tabindex="-1"><code>oh-my-commit.regenerate</code> <a class="header-anchor" href="#oh-my-commit-regenerate" aria-label="Permalink to &quot;`oh-my-commit.regenerate`&quot;">​</a></h3><p>重新生成提交消息。如果当前的提交消息不满意，可以使用此命令重新生成。</p><p><strong>快捷键</strong>：<code>Alt + R</code></p><h2 id="配置命令" tabindex="-1">配置命令 <a class="header-anchor" href="#配置命令" aria-label="Permalink to &quot;配置命令&quot;">​</a></h2><h3 id="oh-my-commit-opensettings" tabindex="-1"><code>oh-my-commit.openSettings</code> <a class="header-anchor" href="#oh-my-commit-opensettings" aria-label="Permalink to &quot;`oh-my-commit.openSettings`&quot;">​</a></h3><p>打开 Oh My Commit 设置面板。快速配置插件的各项参数。</p><h3 id="oh-my-commit-resetsettings" tabindex="-1"><code>oh-my-commit.resetSettings</code> <a class="header-anchor" href="#oh-my-commit-resetsettings" aria-label="Permalink to &quot;`oh-my-commit.resetSettings`&quot;">​</a></h3><p>重置所有设置为默认值。</p><h3 id="oh-my-commit-importsettings" tabindex="-1"><code>oh-my-commit.importSettings</code> <a class="header-anchor" href="#oh-my-commit-importsettings" aria-label="Permalink to &quot;`oh-my-commit.importSettings`&quot;">​</a></h3><p>从文件导入设置。</p><h3 id="oh-my-commit-exportsettings" tabindex="-1"><code>oh-my-commit.exportSettings</code> <a class="header-anchor" href="#oh-my-commit-exportsettings" aria-label="Permalink to &quot;`oh-my-commit.exportSettings`&quot;">​</a></h3><p>导出当前设置到文件。</p><h2 id="ai-相关命令" tabindex="-1">AI 相关命令 <a class="header-anchor" href="#ai-相关命令" aria-label="Permalink to &quot;AI 相关命令&quot;">​</a></h2><h3 id="oh-my-commit-switchaiprovider" tabindex="-1"><code>oh-my-commit.switchAIProvider</code> <a class="header-anchor" href="#oh-my-commit-switchaiprovider" aria-label="Permalink to &quot;`oh-my-commit.switchAIProvider`&quot;">​</a></h3><p>切换 AI 服务提供商。</p><h3 id="oh-my-commit-configureai" tabindex="-1"><code>oh-my-commit.configureAI</code> <a class="header-anchor" href="#oh-my-commit-configureai" aria-label="Permalink to &quot;`oh-my-commit.configureAI`&quot;">​</a></h3><p>配置 AI 相关参数，如模型、温度等。</p><h3 id="oh-my-commit-testaiconnection" tabindex="-1"><code>oh-my-commit.testAIConnection</code> <a class="header-anchor" href="#oh-my-commit-testaiconnection" aria-label="Permalink to &quot;`oh-my-commit.testAIConnection`&quot;">​</a></h3><p>测试与 AI 服务的连接。</p><h2 id="团队协作命令" tabindex="-1">团队协作命令 <a class="header-anchor" href="#团队协作命令" aria-label="Permalink to &quot;团队协作命令&quot;">​</a></h2><div class="warning custom-block"><p class="custom-block-title">即将推出</p><p>以下命令将在团队协作功能发布后可用。</p></div><h3 id="oh-my-commit-syncteamconfig" tabindex="-1"><code>oh-my-commit.syncTeamConfig</code> <a class="header-anchor" href="#oh-my-commit-syncteamconfig" aria-label="Permalink to &quot;`oh-my-commit.syncTeamConfig`&quot;">​</a></h3><p>同步团队配置。</p><h3 id="oh-my-commit-showteamactivity" tabindex="-1"><code>oh-my-commit.showTeamActivity</code> <a class="header-anchor" href="#oh-my-commit-showteamactivity" aria-label="Permalink to &quot;`oh-my-commit.showTeamActivity`&quot;">​</a></h3><p>显示团队活动面板。</p><h2 id="使用示例" tabindex="-1">使用示例 <a class="header-anchor" href="#使用示例" aria-label="Permalink to &quot;使用示例&quot;">​</a></h2><ol><li><p>生成提交消息：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 在 VSCode 中进行代码修改</span></span>\n<span class="line"><span>2. 按下 Alt + G 或在命令面板中执行 oh-my-commit.generateCommitMessage</span></span>\n<span class="line"><span>3. 在弹出的面板中预览生成的提交消息</span></span>\n<span class="line"><span>4. 按下 Alt + C 或执行 oh-my-commit.commit 完成提交</span></span></code></pre></div></li><li><p>切换 AI 提供商：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 打开命令面板 (Cmd/Ctrl + Shift + P)</span></span>\n<span class="line"><span>2. 执行 oh-my-commit.switchAIProvider</span></span>\n<span class="line"><span>3. 在下拉菜单中选择目标提供商</span></span>\n<span class="line"><span>4. 根据提示配置相关参数</span></span></code></pre></div></li></ol>',36)]))}const y=a(m,[["render",c]]);export{p as __pageData,y as default};
