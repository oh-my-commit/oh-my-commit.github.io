import{_ as o,c as a,a0 as t,o as i}from"./chunks/framework.P9qPzDnn.js";const b=JSON.parse('{"title":"VSCode 调试最佳实践","description":"","frontmatter":{},"headers":[],"relativePath":"development/debug/vscode-debugging.md","filePath":"development/debug/vscode-debugging.md"}'),d={name:"development/debug/vscode-debugging.md"};function l(r,e,n,u,s,c){return i(),a("div",null,e[0]||(e[0]=[t('<h1 id="vscode-调试最佳实践" tabindex="-1">VSCode 调试最佳实践 <a class="header-anchor" href="#vscode-调试最佳实践" aria-label="Permalink to &quot;VSCode 调试最佳实践&quot;">​</a></h1><h2 id="调试工具栏优化" tabindex="-1">调试工具栏优化 <a class="header-anchor" href="#调试工具栏优化" aria-label="Permalink to &quot;调试工具栏优化&quot;">​</a></h2><p>在使用 VSCode 进行调试时，默认的调试工具栏可能会影响开发体验。以下是推荐的工具栏设置方案：</p><h3 id="方案一-调整工具栏位置-推荐" tabindex="-1">方案一：调整工具栏位置（推荐） <a class="header-anchor" href="#方案一-调整工具栏位置-推荐" aria-label="Permalink to &quot;方案一：调整工具栏位置（推荐）&quot;">​</a></h3><ol><li>打开 VSCode 设置（<code>Cmd+,</code> 或点击左下角齿轮图标）</li><li>搜索 &quot;debug toolbar&quot;</li><li>找到 &quot;Debug &gt; Toolbars: Location&quot; 设置</li><li>将其修改为 &quot;docked&quot;（推荐）或 &quot;floating&quot;</li></ol><p>这样可以让调试工具栏更加紧凑，减少对编辑区域的干扰。</p><h3 id="方案二-隐藏工具栏" tabindex="-1">方案二：隐藏工具栏 <a class="header-anchor" href="#方案二-隐藏工具栏" aria-label="Permalink to &quot;方案二：隐藏工具栏&quot;">​</a></h3><p>如果确实不需要调试工具栏，可以：</p><ol><li>打开 VSCode 设置</li><li>搜索 &quot;debug toolbar visibility&quot;</li><li>将 &quot;Debug &gt; Toolbars: Visibility&quot; 设置为 &quot;hidden&quot;</li></ol><p>注意：不建议完全隐藏工具栏，因为调试控制按钮（如继续、暂停、步进等）在调试过程中非常有用。</p><h2 id="相关资源" tabindex="-1">相关资源 <a class="header-anchor" href="#相关资源" aria-label="Permalink to &quot;相关资源&quot;">​</a></h2><ul><li><a href="https://code.visualstudio.com/docs/editor/debugging" target="_blank" rel="noreferrer">VSCode Debugging Documentation</a></li><li><a href="https://code.visualstudio.com/docs/editor/debugging#_debug-actions" target="_blank" rel="noreferrer">VSCode Debug Actions</a></li></ul>',12)]))}const h=o(d,[["render",l]]);export{b as __pageData,h as default};
